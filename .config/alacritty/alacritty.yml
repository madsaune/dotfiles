# Setup term for programs to be able to use it
env:
  TERM: xterm-256color

shell:
    program: /usr/local/bin/tmux
    args: ["-u"]

import:
  # - ~/code/github.com/madsaune/dotfiles/.config/alacritty/themes/alabaster.yaml
  - ~/code/github.com/madsaune/dotfiles/.config/alacritty/themes/everforest_dark.yaml

scrolling:
  history: 10000

window:
  opacity: 1

  # Spread additional padding evenly around the terminal content.
  dynamic_padding: false

  # Adds this many blank pixels of padding around the window
  # Units are physical pixels; this is not DPI aware.
  # (change requires restart)
  padding:
    x: 5
    y: 5

  # Window decorations
  #
  # Available values:
  # - `full`: Window with title bar and title bar buttons
  # - `none`: Window without title bar, rounded corners, or drop shadow
  # - `transparent`: Window with title bar with transparent background and title
  #   bar buttons
  # - `buttonless`: Window with title bar with transparent background and no
  #   title bar buttons
  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #     - buttonless: Title bar, transparent background and title bar buttons
  #     - transparent: Title bar, transparent background, but no title bar buttons
  decorations: full

  # Startup Mode (changes require restart)
  startup_mode: Windowed

  # Config warning: alt_send_esc has been removed; It's now always set to 'true'.
  # If you're on macOS use 'window.option_as_alt' to alter behaviour of Option.
  # Basically: Make `Option` key behave as `Alt` (macOS only)
  # Valid values:
  #   - OnlyLeft
  #   - OnlyRight
  #   - Both
  #   - None
  option_as_alt: None

tabspaces: 4

draw_bold_text_with_bright_colors: false

cursor:
  style:
    shape: Block
    blinking: On

# Sample Font configuration for font: Monoid.
# Feel free to use different font configuration family & face for each sections
font:
  # Font size
  size: 16.0

  # Normal font face - Also used to draw glyphs on tmux & VIM
  # NOTE: You may use any font you'd like but make sure the normal fonts
  # support ligatures/glyphs. That's used by tmux & VIM to provide a better
  # UI for powerline & tmux bottom bar.
  normal:
    # family: 'JetBrainsMono Nerd Font Mono'
    family: 'Hack Nerd Font Mono'
    style: Regular

  # Bold font face
  bold:
    # family: 'Cascadia Mono PL'
    family: 'Hack Nerd Font Mono'
    style: Bold

  # Italic font face
  italic:
    # family: 'Cascadia Mono PL'
    family: 'Hack Nerd Font Mono'
    style: Italic

  # Bold italic font face
  # Note: Since i don't have a font italic version of this font, I just specified
  # italic & it just works. You may specifiy the bold italic version if it exists
  # for your font
  bold_italic:
    family: 'Hack Nerd Font Mono'
    style: 'Bold Italic'

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing
  # I've given in 14 spacing which fits really well with my fonts, you may change it
  # to your convenience but make sure to adjust 'glyph_offset' appropriately post that
  offset:
    x: 0
    y: 2

  # Note: This requires RESTART
  # By default when you change the offset above you'll see an issue, where the texts are bottom
  # aligned with the cursor, this is to make sure they center align.
  # This offset should usually be 1/2 of the above offset-y being set.
  glyph_offset:
    x: 0
    # Keeping this as half of offset to vertically align the text in cursor
    y: 1

  use_thing_strokes: true



selection:
  semantic_escape_chars: ",â”‚`|:\"' ()[]{}<>\t"

  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: true

# Live config reload (changes require restart)
live_config_reload: true

# send ESC (\x1b) before characters when alt is pressed.
# this needs to be false on macos for the options key to work properly
# Deprecated in Alacritty 0.12.0, and replaced with window.option_as_alt
# alt_send_esc: false

# Setup some amazing custom key bindings here - Best thing is you can setup key bindings
# using Mac's 'command' to control your tmux.
# A great reference: https://arslan.io/2018/02/05/gpu-accelerated-terminal-alacritty/#make-alacritty-feel-like-iterm2
key_bindings:
  - { key: LBracket, mods: Command,       chars: "\x5c\x70"                }
  - { key: RBracket, mods: Command,       chars: "\x5c\x6e"                }
  - { key: Key6,     mods: Control,       chars: "\x1e"                    }
  - { key: Return,   mods: Control|Shift, action: SpawnNewInstance         }
  - { key: Key7,     mods: Alt,           chars: "\x7C"                    } # |
  # - { key: Left,     mods: Command,       chars: "\x01", mode: AppCursor } # Home
  # - { key: Right,    mods: Command,       chars: "\x05", mode: AppCursor } # End
  - { key: Left,     mods: Command,       chars: "\x1bOH", mode: AppCursor } # Home
  - { key: Right,    mods: Command,       chars: "\x1bOF", mode: AppCursor } # End
  - { key: Key8,     mods: Alt|Shift,     chars: "\x7B"                    } # {
  - { key: Key9,     mods: Alt|Shift,     chars: "\x7D"                    } # }
  - { key: Key8,     mods: Alt,           chars: "\x5B"                    } # [
  - { key: Key9,     mods: Alt,           chars: "\x5D"                    } # ]
